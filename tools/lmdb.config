%%-*- mode: erlang -*-
%% ex: ft=erlang ts=4 sw=4 et

%% How to:
%% * put the lmdb.config file into basho_bench/examples
%% * put the basho_bench_driver_lmdb.erl into basho_bench/src
%% * make clean in basho_bench, then make
%% * edit examples/lmdb.config
%%   - change {code_paths, ["../lmdb"]}. to be a relative path to your
%%     lmdb directory
%%   - change {lmdb_dir, "/home/gburd/ws/basho_bench/data"}. to a fully
%%     qualified location for your test data files (mkdir that directory
%%     yourself, if it doesn't exist the test will fail 'enoent')
%% * to run, replace this path with the proper path on your system:
%%   LD_LIBRARY_PATH=/home/you/lmdb/priv ./basho_bench examples/lmdb.config
%% * the test should run for 10 minutes (as it is configured right now)
%%   with 4 concurrent workers accessing the same table
%%
%% Note:
%% There are two config sections in wt.config {lmdb, [ ... ]}. and
%% {lmdb_, [ ... ]}.  The one being used is named "lmdb" the other
%% config is ignored.  I setup an LSM and BTREE config and to choose
%% which is run you just rename those two sections (turn one off by
%% adding a "_" to the name and take the "_" out of the other's name).

{mode, max}.
{duration, 480}.
{concurrent, 32}.
{driver, basho_bench_driver_lmdb}.
{report_interval, 1}. % sec, default was 10
{pb_timeout_general, 1000}. % ms, default was 60 sec
%{pb_timeout_read, ?}.
%{pb_timeout_write, ?}.
%{pb_timeout_listkeys, ?}.
%{pb_timeout_mapreduce, ?}.
{key_generator, {int_to_bin_littleendian,{uniform_int, 5000000000}}}.
{key_generator, {int_to_bin_littleendian,{pareto_int, 5000000000}}}.
{value_generator, {highly_compressible_bin, 2048}}.
%{value_generator, {fixed_bin, 1024}}.
%{operations, [{get, 25}, {put, 70}, {delete, 5}]}.
{operations, [{put, 1}]}.
{code_paths, ["../lmdb"]}.
{lmdb_dir, "/home/gburd/ws/basho_bench/data"}.

{lmdb, [ ]}.
